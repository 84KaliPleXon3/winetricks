#!/bin/sh

# Copyright 2016 Austin English
# LPGL 2.1+

set -e
set -x

# Wrapper around checkbashisms/shellcheck/whatever other shell checkers I can find

w_die() {
    echo "$* failed"
    exit 1
}

w_try() {
    "$@"
    status=$?
    if test $status -ne 0
    then
        w_die "Note: command $* returned status $status.  Aborting."
    fi
}

if ! command checkbashisms > /dev/null 2>&1 ; then
    w_die "checkbashisms must be installed!"
elif ! command shellcheck --version > /dev/null 2>&1 ; then
    w_die "shellcheck must be installed!"
fi

# Different versions can give different results:
echo "======================== Begin checkbashisms version info ==========================="
checkbashisms --version
echo "======================== End checkbashisms version info ==========================="

echo "======================== Begin shellcheck version info ==========================="
shellcheck --version
echo "======================== End shellcheck version info ==========================="

for shellscript in \
    $(git ls-files | xargs file | grep -e 'POSIX shell script' | cut -d : -f1)
do
    echo "Checking ${shellscript} for bashisms:"
    w_try checkbashisms --posix "${shellscript}"

    echo "Checking ${shellscript} with shellcheck:"
    # SC2030: Modification of WINE is local (to subshell caused by (..) group).
    # SC2031: WINE was modified in a subshell. That change might be lost
    w_try shellcheck -e 2030,2031 -s sh "${shellscript}"
done
